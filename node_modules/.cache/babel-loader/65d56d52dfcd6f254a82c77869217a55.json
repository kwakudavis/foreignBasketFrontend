{"ast":null,"code":"import PropTypes from 'prop-types';\nimport colors from '../colors';\nexport var themeTemplate = {\n  colors: {\n    action: true,\n    actionHover: true,\n    primaryBackground: true,\n    primaryForeground: true,\n    secondaryBackground: true,\n    secondaryForeground: true,\n    secondaryForegroundFocus: true\n  }\n};\nexport var defaultTheme = {\n  colors: {\n    action: colors.GREEN_500,\n    actionHover: colors.GREEN_700,\n    primaryBackground: colors.WHITE,\n    primaryForeground: colors.GREEN_500,\n    secondaryBackground: colors.GREEN_500,\n    secondaryForeground: colors.WHITE,\n    secondaryForegroundFocus: colors.GRAY_46\n  }\n};\nexport function cleanConfig(themeConfig) {\n  var cleanConfigObj = {};\n  Object.keys(themeConfig).forEach(function (themeSection) {\n    if (!themeTemplate[themeSection]) {\n      console.warn(\"Snacks theme error: \\\"\" + themeSection + \"\\\" not a valid config section. These values will not be set. Please use Themer template: \", themeTemplate);\n    } else {\n      Object.keys(themeConfig[themeSection]).forEach(function (sectionKey) {\n        var templateSectionKey = themeTemplate[themeSection][sectionKey];\n        var newSectionKey = themeConfig[themeSection][sectionKey];\n        if (!templateSectionKey) {\n          console.warn(\"Snacks theme error: \\\"\" + sectionKey + \"\\\" not a valid config key. This value will not be set. Please use Themer template: \", themeTemplate);\n        } else {\n          if (!cleanConfigObj[themeSection]) {\n            cleanConfigObj[themeSection] = {};\n          }\n          cleanConfigObj[themeSection][sectionKey] = newSectionKey;\n        }\n      });\n    }\n  });\n  return cleanConfigObj;\n}\nexport function validConfigValue(section, sectionKey) {\n  if (!themeTemplate[section]) {\n    console.warn(\"Snacks theme error: \\\"\" + section + \"\\\" not a valid config section. These values will not be set. Please use Themer template: \", themeTemplate);\n    return false;\n  }\n  if (!themeTemplate[section][sectionKey]) {\n    console.warn(\"Snacks theme error: \\\"\" + sectionKey + \"\\\" not a valid config key. This value will not be set. Please use Themer template: \", themeTemplate);\n    return false;\n  }\n  return true;\n}\nexport var themePropTypes = PropTypes.shape({\n  colors: PropTypes.shape({\n    action: PropTypes.string,\n    actionHover: PropTypes.string,\n    primaryBackground: PropTypes.string,\n    primaryForeground: PropTypes.string,\n    secondaryBackground: PropTypes.string,\n    secondaryForeground: PropTypes.string,\n    secondaryForegroundFocus: PropTypes.string\n  })\n});\nexport default {\n  cleanConfig: cleanConfig,\n  themePropTypes: themePropTypes,\n  themeTemplate: themeTemplate,\n  validConfigValue: validConfigValue\n};","map":{"version":3,"names":["PropTypes","colors","themeTemplate","action","actionHover","primaryBackground","primaryForeground","secondaryBackground","secondaryForeground","secondaryForegroundFocus","defaultTheme","GREEN_500","GREEN_700","WHITE","GRAY_46","cleanConfig","themeConfig","cleanConfigObj","Object","keys","forEach","themeSection","console","warn","sectionKey","templateSectionKey","newSectionKey","validConfigValue","section","themePropTypes","shape","string"],"sources":["/Users/davis/Desktop/Nonsao/Front/node_modules/ic-snacks/dist/esm/styles/themer/utils.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport colors from '../colors';\nexport var themeTemplate = {\n  colors: {\n    action: true,\n    actionHover: true,\n    primaryBackground: true,\n    primaryForeground: true,\n    secondaryBackground: true,\n    secondaryForeground: true,\n    secondaryForegroundFocus: true\n  }\n};\nexport var defaultTheme = {\n  colors: {\n    action: colors.GREEN_500,\n    actionHover: colors.GREEN_700,\n    primaryBackground: colors.WHITE,\n    primaryForeground: colors.GREEN_500,\n    secondaryBackground: colors.GREEN_500,\n    secondaryForeground: colors.WHITE,\n    secondaryForegroundFocus: colors.GRAY_46\n  }\n};\nexport function cleanConfig(themeConfig) {\n  var cleanConfigObj = {};\n  Object.keys(themeConfig).forEach(function (themeSection) {\n    if (!themeTemplate[themeSection]) {\n      console.warn(\"Snacks theme error: \\\"\" + themeSection + \"\\\" not a valid config section. These values will not be set. Please use Themer template: \", themeTemplate);\n    } else {\n      Object.keys(themeConfig[themeSection]).forEach(function (sectionKey) {\n        var templateSectionKey = themeTemplate[themeSection][sectionKey];\n        var newSectionKey = themeConfig[themeSection][sectionKey];\n\n        if (!templateSectionKey) {\n          console.warn(\"Snacks theme error: \\\"\" + sectionKey + \"\\\" not a valid config key. This value will not be set. Please use Themer template: \", themeTemplate);\n        } else {\n          if (!cleanConfigObj[themeSection]) {\n            cleanConfigObj[themeSection] = {};\n          }\n\n          cleanConfigObj[themeSection][sectionKey] = newSectionKey;\n        }\n      });\n    }\n  });\n  return cleanConfigObj;\n}\nexport function validConfigValue(section, sectionKey) {\n  if (!themeTemplate[section]) {\n    console.warn(\"Snacks theme error: \\\"\" + section + \"\\\" not a valid config section. These values will not be set. Please use Themer template: \", themeTemplate);\n    return false;\n  }\n\n  if (!themeTemplate[section][sectionKey]) {\n    console.warn(\"Snacks theme error: \\\"\" + sectionKey + \"\\\" not a valid config key. This value will not be set. Please use Themer template: \", themeTemplate);\n    return false;\n  }\n\n  return true;\n}\nexport var themePropTypes = PropTypes.shape({\n  colors: PropTypes.shape({\n    action: PropTypes.string,\n    actionHover: PropTypes.string,\n    primaryBackground: PropTypes.string,\n    primaryForeground: PropTypes.string,\n    secondaryBackground: PropTypes.string,\n    secondaryForeground: PropTypes.string,\n    secondaryForegroundFocus: PropTypes.string\n  })\n});\nexport default {\n  cleanConfig: cleanConfig,\n  themePropTypes: themePropTypes,\n  themeTemplate: themeTemplate,\n  validConfigValue: validConfigValue\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}