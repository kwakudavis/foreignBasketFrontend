{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nvar _class, _class2, _temp;\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Radium, { Style } from '@instacart/radium';\nimport Normalize from './Normalize';\nimport GlobalTheme from './GlobalTheme';\nvar getFonts = function getFonts(assetsUrl) {\n  return \"@font-face {\\n      font-family: 'ic-icons';\\n      font-weight: normal;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/ic-icons.eot');\\n      src: url('\" + assetsUrl + \"/ic-icons.eot?#iefix') format('embedded-opentype'),\\n           url('\" + assetsUrl + \"/ic-icons.woff') format('woff'),\\n           url('\" + assetsUrl + \"/ic-icons.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/ic-icons.svg#ic-icons') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 300;\\n      font-style: normal;\\n      src: font-url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.eot');\\n      src: font-url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Light'),\\n           local('OpenSans-Light'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 400;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans/OpenSans.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans/OpenSans.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans'),\\n           local('OpenSans'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 600;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Semibold'),\\n           local('OpenSans-Semibold'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 700;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Bold'),\\n           local('OpenSans-Bold'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.svg#OpenSans') format('svg');\\n    }\";\n};\nvar fontLoaded = false;\nvar writeFonts = function writeFonts(assetsUrl) {\n  // if on server, just return\n  if (typeof window === 'undefined') {\n    return;\n  }\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = getFonts(assetsUrl);\n  document.head.appendChild(style);\n};\nvar Styles = Radium(_class = (_temp = _class2 = /*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Styles, _Component);\n  function Styles() {\n    return _Component.apply(this, arguments) || this;\n  }\n  var _proto = Styles.prototype;\n  _proto.componentWillMount = function componentWillMount() {\n    if (fontLoaded) {\n      return;\n    }\n    writeFonts(this.props.assetsUrl);\n    fontLoaded = true;\n  };\n  _proto.render = function render() {\n    return React.createElement(Style, {\n      rules: _extends({}, Normalize, GlobalTheme)\n    });\n  };\n  return Styles;\n}(Component), _class2.propTypes = {\n  assetsUrl: PropTypes.string.isRequired\n}, _temp)) || _class;\nexport default Styles;","map":{"version":3,"names":["_extends","_inheritsLoose","_class","_class2","_temp","React","Component","PropTypes","Radium","Style","Normalize","GlobalTheme","getFonts","assetsUrl","fontLoaded","writeFonts","window","style","document","createElement","setAttribute","innerHTML","head","appendChild","Styles","_Component","apply","arguments","_proto","prototype","componentWillMount","props","render","rules","propTypes","string","isRequired"],"sources":["/Users/davis/Desktop/Nonsao/testEnv/foreignBasketFrontend/node_modules/ic-snacks/dist/esm/styles/SetStyles.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\n\nvar _class, _class2, _temp;\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Radium, { Style } from '@instacart/radium';\nimport Normalize from './Normalize';\nimport GlobalTheme from './GlobalTheme';\n\nvar getFonts = function getFonts(assetsUrl) {\n  return \"@font-face {\\n      font-family: 'ic-icons';\\n      font-weight: normal;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/ic-icons.eot');\\n      src: url('\" + assetsUrl + \"/ic-icons.eot?#iefix') format('embedded-opentype'),\\n           url('\" + assetsUrl + \"/ic-icons.woff') format('woff'),\\n           url('\" + assetsUrl + \"/ic-icons.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/ic-icons.svg#ic-icons') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 300;\\n      font-style: normal;\\n      src: font-url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.eot');\\n      src: font-url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Light'),\\n           local('OpenSans-Light'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Light/OpenSans-Light.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 400;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans/OpenSans.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans/OpenSans.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans'),\\n           local('OpenSans'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans/OpenSans.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 600;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Semibold'),\\n           local('OpenSans-Semibold'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Semibold/OpenSans-Semibold.svg#OpenSans') format('svg');\\n    }\\n\\n    @font-face {\\n      font-family: 'Open Sans';\\n      font-weight: 700;\\n      font-style: normal;\\n      src: url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.eot');\\n      src: url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.eot?#iefix') format('embedded-opentype'),\\n           local('Open Sans Bold'),\\n           local('OpenSans-Bold'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.woff') format('woff'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.ttf') format('truetype'),\\n           url('\" + assetsUrl + \"/OpenSans-Bold/OpenSans-Bold.svg#OpenSans') format('svg');\\n    }\";\n};\n\nvar fontLoaded = false;\n\nvar writeFonts = function writeFonts(assetsUrl) {\n  // if on server, just return\n  if (typeof window === 'undefined') {\n    return;\n  }\n\n  var style = document.createElement('style');\n  style.setAttribute('type', 'text/css');\n  style.innerHTML = getFonts(assetsUrl);\n  document.head.appendChild(style);\n};\n\nvar Styles = Radium(_class = (_temp = _class2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inheritsLoose(Styles, _Component);\n\n  function Styles() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Styles.prototype;\n\n  _proto.componentWillMount = function componentWillMount() {\n    if (fontLoaded) {\n      return;\n    }\n\n    writeFonts(this.props.assetsUrl);\n    fontLoaded = true;\n  };\n\n  _proto.render = function render() {\n    return React.createElement(Style, {\n      rules: _extends({}, Normalize, GlobalTheme)\n    });\n  };\n\n  return Styles;\n}(Component), _class2.propTypes = {\n  assetsUrl: PropTypes.string.isRequired\n}, _temp)) || _class;\n\nexport default Styles;"],"mappings":"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"},"metadata":{},"sourceType":"module"}