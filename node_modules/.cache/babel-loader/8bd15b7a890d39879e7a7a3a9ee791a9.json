{"ast":null,"code":"import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Themer } from './Themer';\nimport { ThemerContext } from './ThemerContext';\nexport var ThemerProvider = /*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ThemerProvider, _React$Component);\n  function ThemerProvider() {\n    var _this;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      tick: 0\n    };\n    _this.onThemeChange = function () {\n      var tick = _this.state.tick; // increment tick to force an update on the context\n\n      _this.setState({\n        tick: tick + 1\n      });\n    };\n    return _this;\n  }\n  var _proto = ThemerProvider.prototype;\n  _proto.componentDidMount = function componentDidMount() {\n    this.unsubscribe = this.context.themer.subscribe(this.onThemeChange);\n  };\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unsubscribe();\n  };\n  _proto.render = function render() {\n    var _this$props = this.props,\n      themer = _this$props.themer,\n      children = _this$props.children; // this creates a new reference every time render gets called\n\n    var themerContext = {\n      themer: themer\n    };\n    return React.createElement(ThemerContext.Provider, {\n      value: themerContext\n    }, children);\n  };\n  return ThemerProvider;\n}(React.Component);\nThemerProvider.propTypes = {\n  themer: PropTypes.instanceOf(Themer),\n  children: PropTypes.node\n};\nThemerProvider.contextType = ThemerContext;\nThemerProvider.propTypes = {\n  themer: PropTypes.object,\n  children: PropTypes.node\n};","map":{"version":3,"names":["_inheritsLoose","React","PropTypes","Themer","ThemerContext","ThemerProvider","_React$Component","_this","_len","arguments","length","args","Array","_key","call","apply","concat","state","tick","onThemeChange","setState","_proto","prototype","componentDidMount","unsubscribe","context","themer","subscribe","componentWillUnmount","render","_this$props","props","children","themerContext","createElement","Provider","value","Component","propTypes","instanceOf","node","contextType","object"],"sources":["/Users/davis/Desktop/Nonsao/Front/node_modules/ic-snacks/dist/esm/styles/themer/ThemerProvider.js"],"sourcesContent":["import _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Themer } from './Themer';\nimport { ThemerContext } from './ThemerContext';\nexport var ThemerProvider =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ThemerProvider, _React$Component);\n\n  function ThemerProvider() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n    _this.state = {\n      tick: 0\n    };\n\n    _this.onThemeChange = function () {\n      var tick = _this.state.tick; // increment tick to force an update on the context\n\n      _this.setState({\n        tick: tick + 1\n      });\n    };\n\n    return _this;\n  }\n\n  var _proto = ThemerProvider.prototype;\n\n  _proto.componentDidMount = function componentDidMount() {\n    this.unsubscribe = this.context.themer.subscribe(this.onThemeChange);\n  };\n\n  _proto.componentWillUnmount = function componentWillUnmount() {\n    this.unsubscribe();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        themer = _this$props.themer,\n        children = _this$props.children; // this creates a new reference every time render gets called\n\n    var themerContext = {\n      themer: themer\n    };\n    return React.createElement(ThemerContext.Provider, {\n      value: themerContext\n    }, children);\n  };\n\n  return ThemerProvider;\n}(React.Component);\nThemerProvider.propTypes = {\n  themer: PropTypes.instanceOf(Themer),\n  children: PropTypes.node\n};\nThemerProvider.contextType = ThemerContext;\nThemerProvider.propTypes = {\n  themer: PropTypes.object,\n  children: PropTypes.node\n};"],"mappings":"AAAA,OAAOA,cAAc,MAAM,0CAA0C;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,MAAM,QAAQ,UAAU;AACjC,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,OAAO,IAAIC,cAAc,GACzB;AACA,UAAUC,gBAAgB,EAAE;EAC1BN,cAAc,CAACK,cAAc,EAAEC,gBAAgB,CAAC;EAEhD,SAASD,cAAc,GAAG;IACxB,IAAIE,KAAK;IAET,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACC,MAAM,EAAEC,IAAI,GAAG,IAAIC,KAAK,CAACJ,IAAI,CAAC,EAAEK,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGL,IAAI,EAAEK,IAAI,EAAE,EAAE;MACvFF,IAAI,CAACE,IAAI,CAAC,GAAGJ,SAAS,CAACI,IAAI,CAAC;IAC9B;IAEAN,KAAK,GAAGD,gBAAgB,CAACQ,IAAI,CAACC,KAAK,CAACT,gBAAgB,EAAE,CAAC,IAAI,CAAC,CAACU,MAAM,CAACL,IAAI,CAAC,CAAC,IAAI,IAAI;IAClFJ,KAAK,CAACU,KAAK,GAAG;MACZC,IAAI,EAAE;IACR,CAAC;IAEDX,KAAK,CAACY,aAAa,GAAG,YAAY;MAChC,IAAID,IAAI,GAAGX,KAAK,CAACU,KAAK,CAACC,IAAI,CAAC,CAAC;;MAE7BX,KAAK,CAACa,QAAQ,CAAC;QACbF,IAAI,EAAEA,IAAI,GAAG;MACf,CAAC,CAAC;IACJ,CAAC;IAED,OAAOX,KAAK;EACd;EAEA,IAAIc,MAAM,GAAGhB,cAAc,CAACiB,SAAS;EAErCD,MAAM,CAACE,iBAAiB,GAAG,SAASA,iBAAiB,GAAG;IACtD,IAAI,CAACC,WAAW,GAAG,IAAI,CAACC,OAAO,CAACC,MAAM,CAACC,SAAS,CAAC,IAAI,CAACR,aAAa,CAAC;EACtE,CAAC;EAEDE,MAAM,CAACO,oBAAoB,GAAG,SAASA,oBAAoB,GAAG;IAC5D,IAAI,CAACJ,WAAW,EAAE;EACpB,CAAC;EAEDH,MAAM,CAACQ,MAAM,GAAG,SAASA,MAAM,GAAG;IAChC,IAAIC,WAAW,GAAG,IAAI,CAACC,KAAK;MACxBL,MAAM,GAAGI,WAAW,CAACJ,MAAM;MAC3BM,QAAQ,GAAGF,WAAW,CAACE,QAAQ,CAAC,CAAC;;IAErC,IAAIC,aAAa,GAAG;MAClBP,MAAM,EAAEA;IACV,CAAC;IACD,OAAOzB,KAAK,CAACiC,aAAa,CAAC9B,aAAa,CAAC+B,QAAQ,EAAE;MACjDC,KAAK,EAAEH;IACT,CAAC,EAAED,QAAQ,CAAC;EACd,CAAC;EAED,OAAO3B,cAAc;AACvB,CAAC,CAACJ,KAAK,CAACoC,SAAS,CAAC;AAClBhC,cAAc,CAACiC,SAAS,GAAG;EACzBZ,MAAM,EAAExB,SAAS,CAACqC,UAAU,CAACpC,MAAM,CAAC;EACpC6B,QAAQ,EAAE9B,SAAS,CAACsC;AACtB,CAAC;AACDnC,cAAc,CAACoC,WAAW,GAAGrC,aAAa;AAC1CC,cAAc,CAACiC,SAAS,GAAG;EACzBZ,MAAM,EAAExB,SAAS,CAACwC,MAAM;EACxBV,QAAQ,EAAE9B,SAAS,CAACsC;AACtB,CAAC"},"metadata":{},"sourceType":"module"}