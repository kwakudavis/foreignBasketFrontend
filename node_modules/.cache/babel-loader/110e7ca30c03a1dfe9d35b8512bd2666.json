{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nexport function isNestedStyle(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return value && value.constructor === Object && value.toString === Object.prototype.toString;\n} // Merge style objects. Deep merge plain object values.\n\nexport function mergeStyles(styles) {\n  var result = {};\n  styles.forEach(function (style) {\n    if (!style || _typeof(style) !== 'object') {\n      return;\n    }\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n    Object.keys(style).forEach(function (key) {\n      // Simple case, nothing nested\n      if (!isNestedStyle(style[key]) || !isNestedStyle(result[key])) {\n        result[key] = style[key];\n        return;\n      } // If nested media, don't merge the nested styles, append a space to the\n      // end (benign when converted to CSS). This way we don't end up merging\n      // media queries that appear later in the chain with those that appear\n      // earlier.\n\n      if (key.indexOf('@media') === 0) {\n        var newKey = key; // eslint-disable-next-line no-constant-condition\n\n        while (true) {\n          newKey += ' ';\n          if (!result[newKey]) {\n            result[newKey] = style[key];\n            return;\n          }\n        }\n      } // Merge all other nested styles recursively\n\n      result[key] = mergeStyles([result[key], style[key]]);\n    });\n  });\n  return result;\n}","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","isNestedStyle","value","Object","toString","mergeStyles","styles","result","forEach","style","Array","isArray","keys","key","indexOf","newKey"],"sources":["/Users/davis/Desktop/Nonsao/testEnv/foreignBasketFrontend/node_modules/@instacart/radium/es/merge-styles.js"],"sourcesContent":["function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nexport function isNestedStyle(value) {\n  // Don't merge objects overriding toString, since they should be converted\n  // to string values.\n  return value && value.constructor === Object && value.toString === Object.prototype.toString;\n} // Merge style objects. Deep merge plain object values.\n\nexport function mergeStyles(styles) {\n  var result = {};\n  styles.forEach(function (style) {\n    if (!style || _typeof(style) !== 'object') {\n      return;\n    }\n\n    if (Array.isArray(style)) {\n      style = mergeStyles(style);\n    }\n\n    Object.keys(style).forEach(function (key) {\n      // Simple case, nothing nested\n      if (!isNestedStyle(style[key]) || !isNestedStyle(result[key])) {\n        result[key] = style[key];\n        return;\n      } // If nested media, don't merge the nested styles, append a space to the\n      // end (benign when converted to CSS). This way we don't end up merging\n      // media queries that appear later in the chain with those that appear\n      // earlier.\n\n\n      if (key.indexOf('@media') === 0) {\n        var newKey = key; // eslint-disable-next-line no-constant-condition\n\n        while (true) {\n          newKey += ' ';\n\n          if (!result[newKey]) {\n            result[newKey] = style[key];\n            return;\n          }\n        }\n      } // Merge all other nested styles recursively\n\n\n      result[key] = mergeStyles([result[key], style[key]]);\n    });\n  });\n  return result;\n}"],"mappings":"AAAA,SAASA,OAAO,CAACC,GAAG,EAAE;EAAE,yBAAyB;;EAAE,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAI,OAAOA,MAAM,CAACC,QAAQ,KAAK,QAAQ,EAAE;IAAEH,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAO,OAAOA,GAAG;IAAE,CAAC;EAAE,CAAC,MAAM;IAAED,OAAO,GAAG,SAASA,OAAO,CAACC,GAAG,EAAE;MAAE,OAAOA,GAAG,IAAI,OAAOC,MAAM,KAAK,UAAU,IAAID,GAAG,CAACG,WAAW,KAAKF,MAAM,IAAID,GAAG,KAAKC,MAAM,CAACG,SAAS,GAAG,QAAQ,GAAG,OAAOJ,GAAG;IAAE,CAAC;EAAE;EAAE,OAAOD,OAAO,CAACC,GAAG,CAAC;AAAE;AAEzX,OAAO,SAASK,aAAa,CAACC,KAAK,EAAE;EACnC;EACA;EACA,OAAOA,KAAK,IAAIA,KAAK,CAACH,WAAW,KAAKI,MAAM,IAAID,KAAK,CAACE,QAAQ,KAAKD,MAAM,CAACH,SAAS,CAACI,QAAQ;AAC9F,CAAC,CAAC;;AAEF,OAAO,SAASC,WAAW,CAACC,MAAM,EAAE;EAClC,IAAIC,MAAM,GAAG,CAAC,CAAC;EACfD,MAAM,CAACE,OAAO,CAAC,UAAUC,KAAK,EAAE;IAC9B,IAAI,CAACA,KAAK,IAAId,OAAO,CAACc,KAAK,CAAC,KAAK,QAAQ,EAAE;MACzC;IACF;IAEA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxBA,KAAK,GAAGJ,WAAW,CAACI,KAAK,CAAC;IAC5B;IAEAN,MAAM,CAACS,IAAI,CAACH,KAAK,CAAC,CAACD,OAAO,CAAC,UAAUK,GAAG,EAAE;MACxC;MACA,IAAI,CAACZ,aAAa,CAACQ,KAAK,CAACI,GAAG,CAAC,CAAC,IAAI,CAACZ,aAAa,CAACM,MAAM,CAACM,GAAG,CAAC,CAAC,EAAE;QAC7DN,MAAM,CAACM,GAAG,CAAC,GAAGJ,KAAK,CAACI,GAAG,CAAC;QACxB;MACF,CAAC,CAAC;MACF;MACA;MACA;;MAGA,IAAIA,GAAG,CAACC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC/B,IAAIC,MAAM,GAAGF,GAAG,CAAC,CAAC;;QAElB,OAAO,IAAI,EAAE;UACXE,MAAM,IAAI,GAAG;UAEb,IAAI,CAACR,MAAM,CAACQ,MAAM,CAAC,EAAE;YACnBR,MAAM,CAACQ,MAAM,CAAC,GAAGN,KAAK,CAACI,GAAG,CAAC;YAC3B;UACF;QACF;MACF,CAAC,CAAC;;MAGFN,MAAM,CAACM,GAAG,CAAC,GAAGR,WAAW,CAAC,CAACE,MAAM,CAACM,GAAG,CAAC,EAAEJ,KAAK,CAACI,GAAG,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;EACJ,CAAC,CAAC;EACF,OAAON,MAAM;AACf"},"metadata":{},"sourceType":"module"}